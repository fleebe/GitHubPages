digraph {label="graphs Class Diagram";
labelloc="t";
"ClassDiagram" [shape=none, label=<<TABLE cellspacing="0" cellborder="0" align="left">
<TR><TD align="left" bgcolor="lightblue"><B>ClassDiagram : GraphBase</B></TD></TR>
<TR><TD align="left"><B>properties</B><BR/>
+ declarationList: array<BR/>
</TD></TR>
<TR><TD align="left"><B>methods</B><BR/>
+ constructor(dependencyList, declarationList)<BR/>
+ generate(dir)<BR/>
+ createClassNode(classItem)<BR/>
+ createInterfaceNode(interfaceItem)<BR/>
</TD></TR>
</TABLE>>];
"ClassDiagram"->"GraphBase" [arrowhead=empty, style=solid];
"ClassDiagram"->"IGraphFileGenerator" [arrowhead=empty, style=dashed];

"ExportGraph" [shape=none, label=<<TABLE cellspacing="0" cellborder="0" align="left">
<TR><TD align="left" bgcolor="lightblue"><B>ExportGraph : GraphBase</B></TD></TR>
<TR><TD align="left"><B>properties</B><BR/>
+ exportList: array<BR/>
</TD></TR>
<TR><TD align="left"><B>methods</B><BR/>
+ constructor(dependencyList, exportList, moduleArray)<BR/>
+ generate(dir)<BR/>
+ createModuleNode(mod, exportList)<BR/>
- createNodeModulesRelations(modName, nodeMods)<BR/>
- createRelations(modules)<BR/>
</TD></TR>
</TABLE>>];
"ExportGraph"->"GraphBase" [arrowhead=empty, style=solid];
"ExportGraph"->"IGraphFileGenerator" [arrowhead=empty, style=dashed];

"GraphBase" [shape=none, label=<<TABLE cellspacing="0" cellborder="0" align="left">
<TR><TD align="left" bgcolor="lightblue"><B>GraphBase</B></TD></TR>
<TR><TD align="left"><B>properties</B><BR/>
+ dependencyList: array<BR/>
+ moduleArray: array<BR/>
+ diagramsHTML: string<BR/>
</TD></TR>
<TR><TD align="left"><B>methods</B><BR/>
+ constructor(depList, moduleArray)<BR/>
+ digraph(title)<BR/>
+ nodeStart(title)<BR/>
+ makeSafeTitle(title)<BR/>
+ nodeFinish()<BR/>
+ recordDigraph(title)<BR/>
+ getDependsOnMod(mod)<BR/>
+ getNodeModuleList()<BR/>
+ filterModulesForDir(dir)<BR/>
+ uniqueDirs()<BR/>
+ isNodeModule(dep)<BR/>
+ inSameDirectory(dep)<BR/>
+ cleanDirPath(root)<BR/>
</TD></TR>
</TABLE>>];

"IGraphFileGenerator" [shape=none, label=<<TABLE cellspacing="0" cellborder="0" align="left">
<TR><TD align="center" bgcolor="lightyellow"><I>&lt;&lt;interface&gt;&gt;</I><BR/><B>IGraphFileGenerator</B></TD></TR>
<TR><TD align="left"><B>methods</B><BR/>
generate(filter)<BR/>
</TD></TR>
</TABLE>>];

"NodeModulesGraph" [shape=none, label=<<TABLE cellspacing="0" cellborder="0" align="left">
<TR><TD align="left" bgcolor="lightblue"><B>NodeModulesGraph : GraphBase</B></TD></TR>
<TR><TD align="left"><B>methods</B><BR/>
+ constructor(dependencyList)<BR/>
+ generate()<BR/>
+ createNodeModulesSection()<BR/>
</TD></TR>
</TABLE>>];
"NodeModulesGraph"->"GraphBase" [arrowhead=empty, style=solid];

"PackageGraph" [shape=none, label=<<TABLE cellspacing="0" cellborder="0" align="left">
<TR><TD align="left" bgcolor="lightblue"><B>PackageGraph : GraphBase</B></TD></TR>
<TR><TD align="left"><B>methods</B><BR/>
+ constructor(moduleArray, dependencyList)<BR/>
+ generate()<BR/>
- createPackageDependencies()<BR/>
- createPackageNodes()<BR/>
</TD></TR>
</TABLE>>];
"PackageGraph"->"GraphBase" [arrowhead=empty, style=solid];

"RelationsGraph" [shape=none, label=<<TABLE cellspacing="0" cellborder="0" align="left">
<TR><TD align="left" bgcolor="lightblue"><B>RelationsGraph : GraphBase</B></TD></TR>
<TR><TD align="left"><B>properties</B><BR/>
+ nodeMods: array<BR/>
</TD></TR>
<TR><TD align="left"><B>methods</B><BR/>
+ constructor(dependencyList, moduleArray)<BR/>
+ generate()<BR/>
- getUsedBy(mod)<BR/>
- createModuleRelationNode(mod)<BR/>
- createNodeModulesSection()<BR/>
</TD></TR>
</TABLE>>];
"RelationsGraph"->"GraphBase" [arrowhead=empty, style=solid];

}
